// nf-core modules test ariba/run
nextflow_process {

    name "Test Process ARIBA_RUN"
    script "../main.nf"
    process "ARIBA_RUN"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "ariba"
    tag "ariba/run"

    test("illumina - fatsq") {

        setup {
            run("ARIBA_GETREF") {
                    script "../../../ariba/getref/main.nf"
                    process {
                        """
                        input[0] =  "card"
                        """
                    }
                }
        }
        when {
            process {
                """

                input[0] = [ [ id:'test', single_end:false ], // meta map
                        [   file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                            file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ],
                        ]
                input[1] = ARIBA_GETREF.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.results[0][1].findAll {
                    file(it).name != "report.tsv" &&
                    file(it).name != "assembled_genes.fa.gz" &&
                    file(it).name != "assembled_seqs.fa.gz" &&
                    file(it).name != "assemblies.fa.gz"  &&
                    file(it).name != "debug.report.tsv" &&
                    file(it).name != "version_info.txt"}).match()},
                { assert file(process.out.results[0][1].find {
                    file(it).name == "report.tsv" }).exists() },
                { assert file(process.out.results[0][1].find {
                    file(it).name == "assembled_genes.fa.gz" }).exists() },
                { assert file(process.out.results[0][1].find {
                    file(it).name == "assembled_seqs.fa.gz" }).exists() },
                { assert file(process.out.results[0][1].find {
                    file(it).name == "assemblies.fa.gz" }).exists() },
                { assert file(process.out.results[0][1].find {
                    file(it).name == "debug.report.tsv" }).exists() },
                { assert file(process.out.results[0][1].find {
                    file(it).name == "version_info.txt" }).exists() },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }
}
